!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).Passwordless={})}(this,(function(e){"use strict";function t(){return void 0!==window.PublicKeyCredential&&"function"==typeof window.PublicKeyCredential}function n(){if(!t())throw new Error("WebAuthn and PublicKeyCredentials are not supported on this browser/device")}const i=function(e){if("string"==typeof e){e=e.replace(/-/g,"+").replace(/_/g,"/");for(var t=window.atob(e),n=new Uint8Array(t.length),i=0;i<t.length;i++)n[i]=t.charCodeAt(i);e=n}if(Array.isArray(e)&&(e=new Uint8Array(e)),e instanceof Uint8Array&&(e=e.buffer),!(e instanceof ArrayBuffer))throw new TypeError("could not coerce to ArrayBuffer");return e},r=function(e){if(Array.isArray(e)&&(e=Uint8Array.from(e)),e instanceof ArrayBuffer&&(e=new Uint8Array(e)),e instanceof Uint8Array){for(var t="",n=e.byteLength,i=0;i<n;i++)t+=String.fromCharCode(e[i]);e=window.btoa(t)}if("string"!=typeof e)throw new Error("could not coerce to string");return e=e.replace(/\+/g,"-").replace(/\//g,"_").replace(/=*$/g,"")};e.Client=class{config={apiUrl:"https://api.passwordless.dev/",apiKey:"",Origin:location.origin,RPID:location.hostname};constructor(e){this.config={...this.config,...e}}async register(e,t){n();const r={nickname:"",...t};let a,o,s;try{var{data:c,sessionId:l}=await this.registerBegin(e);a=c,o=l}catch(e){throw console.error("Failed during register/begin"),e}a.challenge=i(a.challenge),a.user.id=i(a.user.id),a.excludeCredentials=a.excludeCredentials.map(e=>(e.id=i(e.id),e)),null===a.authenticatorSelection.authenticatorAttachment&&(a.authenticatorSelection.authenticatorAttachment=void 0);try{s=await navigator.credentials.create({publicKey:a})}catch(e){throw console.warn("Failed during credentials.create in browser. One reason could be because the username is already registered with your authenticator. Please change username or authenticator.",e),e}try{await this.registerComplete(s,o,r)}catch(e){console.warn("Failed during register/complete",e)}}async registerBegin(e){const t=await fetch(this.config.apiUrl+"register/begin",{method:"POST",body:JSON.stringify({token:e,...this._params()}),headers:{Accept:"application/json","Content-Type":"application/json",ApiKey:this.config.apiKey}});return await t.json()}async registerComplete(e,t,n){let i=new Uint8Array(e.response.attestationObject),a=new Uint8Array(e.response.clientDataJSON),o=new Uint8Array(e.rawId);const s={id:e.id,rawId:r(o),type:e.type,extensions:e.getClientExtensionResults(),response:{AttestationObject:r(i),clientDataJson:r(a)}},c=await fetch(this.config.apiUrl+"register/complete",{method:"POST",body:JSON.stringify({response:s,sessionId:t,nickname:n.nickname,...this._params()}),headers:{Accept:"application/json","Content-Type":"application/json",ApiKey:this.config.apiKey}});return await c.json()}async signin(e){var t,r;n();try{({data:t,sessionId:r}=await this.signinBegin(e))}catch(e){throw console.warn("Failed during signin/begin",e),e}let a;t.challenge=i(t.challenge),t.allowCredentials.forEach((function(e){e.id=i(e.id)}));try{a=await navigator.credentials.get({publicKey:t})}catch(e){throw console.warn("Failed during credentials.get in browser.",e),e}try{return(await this.signinComplete(a,r)).data}catch(e){throw console.warn("Failed during signin/complete",e),e}}async signinBegin(e){var t=await fetch(this.config.apiUrl+"signin/begin",{method:"POST",body:JSON.stringify({username:e,...this._params()}),headers:{Accept:"application/json",ApiKey:this.config.apiKey}});return await t.json()}async signinComplete(e,t){let n=new Uint8Array(e.response.authenticatorData),i=new Uint8Array(e.response.clientDataJSON),a=new Uint8Array(e.rawId),o=new Uint8Array(e.response.signature);const s={id:e.id,rawId:r(a),type:e.type,extensions:e.getClientExtensionResults(),response:{authenticatorData:r(n),clientDataJson:r(i),signature:r(o)}};var c=await fetch(this.config.apiUrl+"signin/complete",{method:"POST",body:JSON.stringify({response:s,sessionId:t,...this._params()}),headers:{Accept:"application/json",ApiKey:this.config.apiKey}});return await c.json()}_params(){return{RPID:this.config.RPID,Origin:this.config.Origin}}},e.isBrowserSupported=t,e.isPlatformSupported=async function(){return!!t()&&await PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable()},Object.defineProperty(e,"__esModule",{value:!0})}));
